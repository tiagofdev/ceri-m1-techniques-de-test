# This config was automatically generated from your source code
# Stacks detected: deps:java:.

version: 2.1

executors:
  java-docker:
    docker:
      - image: cimg/openjdk:21.0  # Predefined Docker image for Java builds

jobs:
  test-java:
    executor: java-docker  # Use the predefined executor
    steps:
      - checkout
      - run:
          name: Calculate Cache Key
          command: |
            find . -name 'pom.xml' -o -name 'gradlew*' -o -name '*.gradle*' | \
                    sort | xargs cat > /tmp/CIRCLECI_CACHE_KEY
      - restore_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
      - run:
          name: Run Unit Tests
          command: mvn test
      - run:
          name: Verify Build
          command: mvn verify
      - store_test_results:
          path: target/surefire-reports
      - save_cache:
          key: cache-{{ checksum "/tmp/CIRCLECI_CACHE_KEY" }}
          paths:
            - ~/.m2/repository
      - run:
          name: Generate Test Coverage Report
          command: mvn test jacoco:report
      - run:
          name: Upload Coverage to Codecov
          command: bash <(curl -s https://codecov.io/bash) || echo "Codecov upload failed"
      - codecov/upload:
          file: ./target/site/jacoco/jacoco.xml
      - run:
          name: Generate Javadoc
          command: mvn -B javadoc:javadoc

      - run:
          name: Deploy Javadoc to GitHub Pages
          command: |
            git config --global user.email "your-email@example.com"
            git config --global user.name "Your Name"
            git clone --branch gh-pages https://github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git gh-pages
            mkdir -p gh-pages/javadoc
            cp -r target/site/apidocs/* gh-pages/javadoc/
            cd gh-pages
            git add .
            git commit -m "Deploy Javadoc to GitHub Pages [skip ci]"
            git push https://${GH_PAGES_TOKEN}@github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.git gh-pages || echo "Deployment failed"
  

  deploy:
    executor: java-docker
    steps:
      - checkout
      - run:
          name: Deploy Application
          command: ./deploy.sh

workflows:
  build-and-test:
    jobs:
      - test-java
      - deploy:
          requires:
            - test-java
          filters:
            branches:
              only: master

orbs:
  codecov: codecov/codecov@4.0.1
